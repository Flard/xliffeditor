<?php

/**
 * BaseProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $token
 * @property Doctrine_Collection $Languages
 * @property Doctrine_Collection $Files
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getName()      Returns the current record's "name" value
 * @method string              getToken()     Returns the current record's "token" value
 * @method Doctrine_Collection getLanguages() Returns the current record's "Languages" collection
 * @method Doctrine_Collection getFiles()     Returns the current record's "Files" collection
 * @method Project             setId()        Sets the current record's "id" value
 * @method Project             setName()      Sets the current record's "name" value
 * @method Project             setToken()     Sets the current record's "token" value
 * @method Project             setLanguages() Sets the current record's "Languages" collection
 * @method Project             setFiles()     Sets the current record's "Files" collection
 * 
 * @package    xliffeditor
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('project');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('token', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProjectLanguage as Languages', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $this->hasMany('Resource as Files', array(
             'local' => 'id',
             'foreign' => 'project_id'));
    }
}