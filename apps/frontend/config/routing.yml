# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

# default rules
homepage:
  url:   /
  param: { module: project, action: index }

project_index:
  url:   /:sf_culture
  param: { module: project, action: index }

project:
  url:   /:sf_culture/projects/:slug
  class: sfDoctrineRoute
  param: { module: project, action: show }
  options: { type: object, model: Project }

language_add:
  url:   /:sf_culture/projects/:slug/add-language
  class: sfDoctrineRoute
  param: { module: project, action:addLanguage }
  options: { type: object, model: Project }
  requirements:
    sf_method: ['GET', 'POST', 'PUT']

resource_add:
  url:   /:sf_culture/projects/:slug/add-resource
  class: sfDoctrineRoute
  param: { module: resource, action:add }
  options: { type: object, model: Project }
  requirements:
    sf_method: ['GET', 'POST', 'PUT']

resource:
  url:   /:sf_culture/projects/:projectSlug/resources/:catalogue
  class: sfDoctrineRoute
  param: { module: resource, action: show }
  options: { type: object, model: Resource, method: 'retrieveForRouting' }

resource_download:
  url:   /:sf_culture/projects/:projectSlug/download/:catalogue/:lang
  class: sfDoctrineRoute
  param: { module: resource, action: download }
  options: { type: object, model: Resource }

resource_update:
  url:   /:sf_culture/projects/:projectSlug/upload/:catalogue
  class: sfDoctrineRoute
  param: { module: resource, action: update }
  options: { type: object, model: Resource }
  requirements:
    sf_method: ['GET', 'POST', 'PUT']

resource_admin:
  url:   /:sf_culture/projects/:projectSlug/admin
  class: sfDoctrineRoute
  param: { module: resource, action: manage }
  options: { type: object, model: Resource }
  requirements:
    sf_method: ['GET', 'POST', 'PUT']

resource_translate:
  url:   /:sf_culture/projects/:projectSlug/translate/:catalogue/:lang
  class: sfDoctrineRoute
  param: { module: resource, action: translate }
  options: { type: object, model: Resource }
  requirements:
    sf_method: ['GET', 'POST']

project_admin:
  url:    /:sf_culture/manage-projects

api_admin:
  url:    /:sf_culture/manage-api

profile:
  url:   /:sf_culture/profile
  param: { module: profile, action: edit }

api:
  url:   /api/:action.:sf_format
  param: { module: api, sf_format: json }